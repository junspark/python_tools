

# /home/beams/SPECADM/local_macros/BCDA/undulators.mac
def setundgap '{
    if ($# != 1 ) {
        print "Usage: $0 gap[mm]"
        print "   Sets the undulator gap gradually in 10 predefined steps."
        print "   Current undulator: EP_Und=", EP_Und 
        print "   It can be ID01us: or ID01ds:"
        exit
    } 
    
    _undgapset ($1)+0.5
    _undgapset ($1)+0.2
    _undgapset ($1)+0.1
    _undgapset ($1)+0.040
    _undgapset ($1)+0.020
    _undgapset ($1)+0.015
    _undgapset ($1)+0.010
    _undgapset ($1)+0.005
    _undgapset ($1)+0.002
    _undgapset ($1)

}'

def _undgapset '{
    # _undgapset target offset
    if ($# != 1 ) {
        print "Usage: $0 gap[mm]"
        print "   Sets the undulator gap in 1 step." 
        print "   Current undulator: EP_Und=", EP_Und 
        print "   It can be ID01us: or ID01ds:"
        exit
    } 
    if (!(EP_Und == "ID01us:" || EP_Und == "ID01ds:")) {
        print "ERROR: Wrong undulator given."
        print "   Current undulator: EP_Und=", EP_Und 
        print "   It can be ID01us: or ID01ds:"
        exit
    }

    local gap    
    gap = ($1)
    p "Sets the gap to ", gap, "mm"
    epics_put(sprintf("%sScanGap",EP_Und),gap)
    waitund
    sleep(1)
}'

